from pyrogram import Client
import asyncio
from datetime import datetime
from zoneinfo import ZoneInfo
from flask import Flask
from threading import Thread

# ─── اطلاعات اکانت ───
api_id = 28190856
api_hash = "6b9b5309c2a211b526c6ddad6eabb521"
phone_number = "+989011243659"

# ─── کلاینت تلگرام ───
app = Client("my_account", api_id=api_id, api_hash=api_hash, phone_number=phone_number)

# ─── منطقه زمانی ایران ───
TEHRAN_TIMEZONE = ZoneInfo("Asia/Tehran")

# ─── وب‌سرور ساده برای پینگ ───
app_flask = Flask('')

@app_flask.route('/')
def home():
    return "Self Bot is running with clock ⏰"

def run():
    app_flask.run(host='0.0.0.0', port=8080)

def keep_alive():
    t = Thread(target=run)
    t.start()

# ─── تبدیل ارقام به فونت خاص ───
def stylize_time(time_str: str) -> str:
    conversion_map = {
        '0': '𝟶', '1': '𝟷', '2': '𝟸', '3': '𝟹', '4': '𝟺',
        '5': '𝟻', '6': '𝟼', '7': '𝟽', '8': '𝟾', '9': '𝟿',
        ':': ':'
    }
    return ''.join(conversion_map.get(char, char) for char in time_str)

# ─── آپدیت اسم با ساعت ───
async def update_name():
    while True:
        tehran_time = datetime.now(TEHRAN_TIMEZONE)
        current_time_str = tehran_time.strftime("%H:%M")
        stylized_time_str = stylize_time(current_time_str)
        name_with_clock = f"𝓎𝑒 𝒶𝓂𝒾𝓇 {stylized_time_str}"

        try:
            await app.update_profile(first_name=name_with_clock)
            print(f"[{datetime.now().strftime('%Y-%m-%d %H:%M:%S')}] Updated name to: {name_with_clock}")
        except Exception as e:
            print(f"Error updating name: {e}")

        now = datetime.now()
        seconds_into_minute = now.second + now.microsecond / 1_000_000
        sleep_seconds = 60 - seconds_into_minute
        if sleep_seconds < 0.5:
            sleep_seconds += 60
        await asyncio.sleep(sleep_seconds)

# ─── اجرای اصلی ───
async def main():
    print("Starting Telegram Client...")
    await app.start()
    print("Client running. Starting name update loop.")
    await update_name()
    await app.stop()

if __name__ == "__main__":
    keep_alive()  # این خط نذاره پروژه خاموش شه
    try:
        asyncio.run(main())
    except KeyboardInterrupt:
        print("\nBot stopped by user.")
    except Exception as e:
        print(f"An unexpected error occurred in main execution: {e}")
